@mixin for-size($size) {
  @if $size == mobile {
    @media (max-width: $mobile_max) { @content; }
  } @else if $size == tablet {
    @media (min-width: $tablet_min) and (max-width: $tablet_max) { @content; }
  } @else if $size == desktop {
    @media (min-width: $desktop_min) { @content; }
  } @else if $size == no-mobile {
    @media (min-width: $tablet_min) { @content; }
  } @else if $size == no-desktop {
    @media (max-width: $tablet_max) { @content; }
  } @else if $size == widescreen {
    @media (min-width: $widescreen_min) { @content; }
  }
}

@mixin reset-appearance() {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  outline: none;
  margin: 0;
  padding: 0;
  border: 0;
  border-radius: 0;
  background: transparent;
}

@mixin content-margins {
  width: calc(100% - calc(#{$content_desktop_margins} * 2));
  max-width: $content_desktop_max_width;
  margin-left: auto !important;
  margin-right: auto !important;
  @include for-size(widescreen) {
    max-width: $content_widescreen_max_width;
  } @include for-size(mobile) {
    width: calc(100vw - calc(#{$content_mobile_margins} * 2));
  }
}

@mixin container-margins {
  width: calc(100% - calc(#{$container_desktop_margins} * 2));
  max-width: $container_desktop_max_width;
  margin-left: auto !important;
  margin-right: auto !important;
  @include for-size(widescreen) {
    max-width: $container_widescreen_max_width;
  } @include for-size(mobile) {
    width: calc(100vw - calc(#{$container_mobile_margins} * 2));
  }
}

@mixin full-width {
  @include for-size(no-mobile) {
    width: 100vw;
    position: relative;
    left: -7.2rem;
    padding-left: 7.2rem;
  }
}

@mixin full-width-in-content {
  @include for-size(no-mobile) {
    width: 100vw;
    position: relative;
    left: calc(50% - 50vw - 3.6rem);
    padding-left: 7.2rem;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    @content;
  }
  &::-moz-placeholder { /* Firefox 19+ */
    @content;
  }
  &:-ms-input-placeholder { /* IE 10+ */
    @content;
  }
  &:-moz-placeholder { /* Firefox 18- */
    @content;
  }
}

@mixin max($property, $val, $val2) {
  #{$property}: m#{a}x(#{$val}, #{$val2});
}

@mixin min($property, $val, $val2) {
  #{$property}: m#{i}n(#{$val}, #{$val2});
}

@mixin flex($grow, $shrink, $basis) {
  flex-grow: $grow;
  flex-shrink: $shrink;
  flex-basis: $basis;
}

@mixin input-style($color: inherit) {
  @include reset-appearance;

  @include placeholder {

  } &:focus {
    // TODO: ADD TEXT INPUT FOCUS STYLES
  }
}

@mixin button-style($color: inherit) {
  display: block;
  position: relative;
  @include nav-font-style;
  padding: 0 2.8rem;
  padding-top: 0.7rem;
  padding-bottom: 0.6rem;
  color: $peach;
  background: rgba($white, 0.15);
  border: 1px solid rgba($peach, 0.4);
  transition: background 300ms $bezier, color 300ms $bezier;
  &::before {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 0.2rem;
    background: $peach;
    transform-origin: center bottom;
    transform: scaleY(0);
    transition: transform 300ms $bezier;
  }
  &:focus, &:hover {
    background-color: $offwhite;
    color: $terblack;
    &::before {
      transform: scale(1);
    }
  }
}

@mixin logo-hover {
  position: relative;
  display: block;
  svg {
    transition: transform 600ms $bezier;
  }
  &::before {
    content: '';
    background-color: $offwhite;
    width: 100%;
    height: 0.4rem;
    position: absolute;
    left: 0;
    bottom: 0;
    transform: scaleX(0);
    transform-origin: left bottom;
    transition: transform 600ms $bezier;
  }

  &:hover, &:focus {
    svg {
      transform: translateY(-0.8rem);
    }
    &::before {
      transform: scale(1);
    }
  }
}

@mixin ul-style {
  padding: 0;
  margin: 2.4rem 0;
  list-style: 0;
  > li {
    @include p-style;
    padding-left: 8rem;
    margin-bottom: 2.4rem;
    position: relative;
    &::before {
      content: '';
      top: 0.9rem;
      left: 5.6rem;
      position: absolute;
      background-color: $peach;
      width: 0.8rem;
      height: 0.8rem;
      border-radius: 50%;
    }
    &:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin ol-style {
  padding: 0;
  margin: 2.4rem 0;
  list-style: 0;
  counter-reset: olcounter;
  > li {
    @include p-style;
    padding-left: 8rem;
    margin-bottom: 2.4rem;
    position: relative;
    counter-increment: olcounter;
    &::before {
      content: counter(olcounter) '.';
      top: 0;
      left: 5.6rem;
      position: absolute;
      color: $peach;

    }
    &:last-child {
      margin-bottom: 0;
    }
  }
}
